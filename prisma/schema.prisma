// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Session {
  id            String   @id @default(cuid())
  user_id       Int
  expires       DateTime
  session_token String   @unique
  access_token  String   @unique
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt
  user          User     @relation(fields: [user_id], references: [id])
}

model User_Status {
  id          Int    @id @default(autoincrement())
  name        String @unique
  status_flag Int    @default(0)
  User        User[]
}

model Role {
  id          Int    @id @default(autoincrement())
  name        String @unique
  status_flag Int    @default(0)
  User        User[]
}

model User {
  id             Int              @id @default(autoincrement())
  username       String           @unique
  email          String           @unique
  password       String
  firstname      String
  lastname       String
  tel            String?
  image          String?
  license        String?
  role_id        Int
  role           Role?            @relation(fields: [role_id], references: [id])
  emp_id         Int?
  company_id     Int
  company        Company?         @relation(fields: [company_id], references: [id])
  department_id  Int
  department     Department?      @relation(fields: [department_id], references: [id])
  position_id    Int
  position       Position?        @relation(fields: [position_id], references: [id])
  status_id      Int
  user_status    User_Status?      @relation(fields: [status_id], references: [id])
  step           Int              @default(0)
  created_at     DateTime         @default(now())
  updated_at     DateTime         @updatedAt
  status_flag    Int              @default(0)
  Session        Session[]
  Table_ITC_0001 Table_ITC_0001[]
  Track_Doc      Track_Doc[]
}

model Company {
  id          Int    @id @default(autoincrement())
  name        String @unique
  status_flag Int    @default(0)
  User        User[]
}

model Department {
  id          Int    @id @default(autoincrement())
  name        String @unique
  status_flag Int    @default(0)
  User        User[]
}

model Position {
  id          Int    @id @default(autoincrement())
  name        String @unique
  status_flag Int    @default(0)
  User        User[]
}

model Asset_Type {
  id          Int     @id @default(autoincrement())
  name        String  @unique
  status_flag Int     @default(0)
  Asset       Asset[]
}

model Asset {
  id             Int              @id @default(autoincrement())
  name           String           @unique
  asset_type_id  Int
  asset_type     Asset_Type?      @relation(fields: [asset_type_id], references: [id])
  status_flag    Int              @default(0)
  Table_ITC_0001 Table_ITC_0001[]
}

model Table_Ref_Quotation {
  id                Int             @id @default(autoincrement())
  name              String?
  table_ITC_0001_id Int?
  table_ITC_0001_   Table_ITC_0001? @relation(fields: [table_ITC_0001_id], references: [id])
}

model Table_ITC_0001 {
  id                  Int                   @id @default(autoincrement())
  asset_id            Int
  asset               Asset?                @relation(fields: [asset_id], references: [id])
  qty                 Int?
  purpose             String?
  spec_detail         String?
  ref_ro              String?
  remark              String?
  created_at          DateTime              @default(now())
  request_by_id       Int
  request_by          User?                 @relation(fields: [request_by_id], references: [id])
  document_head_id    String
  document_head       Document_Head?        @relation(fields: [document_head_id], references: [ref_no])
  status_flag         Int                   @default(0)
  Table_Ref_Quotation Table_Ref_Quotation[]
}

model Document {
  id            Int             @id @default(autoincrement())
  name          String
  status_flag   Int             @default(0)
  Routing       Routing[]
  Document_Head Document_Head[]
}

model Routing {
  id          Int       @id @default(autoincrement())
  step        Int
  name        String
  document_id Int
  document    Document? @relation(fields: [document_id], references: [id])
  status_flag Int       @default(0)
}

model Document_Head {
  id             Int              @id @default(autoincrement())
  ref_no         String           @unique
  document_id    Int
  document       Document?        @relation(fields: [document_id], references: [id])
  start_date     DateTime         @default(now())
  end_date       DateTime?
  status         Int              @default(0)
  status_flag    Int              @default(0)
  Table_ITC_0001 Table_ITC_0001[]
  Track_Doc      Track_Doc[]
}

model Track_Doc {
  id               Int            @id @default(autoincrement())
  step             Int
  name             String
  document_head_id String
  document_head    Document_Head? @relation(fields: [document_head_id], references: [ref_no])
  start_date       DateTime       @default(now())
  end_date         DateTime?
  user_id          Int?
  user             User?          @relation(fields: [user_id], references: [id])
  remark           String?
  status           Int            @default(0)
  status_flag      Int            @default(0)
}
