// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int                @id @default(autoincrement())
  username         String?            @unique
  email            String?            @unique
  password         String?
  firstname        String?
  lastname         String?
  tel              String
  image            String
  license          String
  role             String             @default("user")
  emp_id           String
  companyId        Int
  company          Company            @relation(fields: [companyId], references: [id])
  departmentId     Int
  department       Department?        @relation(fields: [departmentId], references: [id])
  positionId       Int
  position         Position?          @relation(fields: [positionId], references: [id])
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  RequestEquipment RequestEquipment[]
  ApproveEquipment ApproveEquipment[]
}

model Company {
  id   Int     @id @default(autoincrement())
  name String? @unique
  User User[]
}

model Department {
  id   Int     @id @default(autoincrement())
  name String? @unique
  User User[]
}

model Position {
  id   Int     @id @default(autoincrement())
  name String? @unique
  User User[]
}

model RequestEquipment {
  id               Int                @id @default(autoincrement())
  purpose          String
  requestDate      DateTime           @default(now())
  requestById      Int
  requestBy        User?              @relation(fields: [requestById], references: [id])
  completeDate     DateTime           @default(now())
  step             Int
  allStatus        String
  remark           String
  ApproveEquipment ApproveEquipment[]
  Equipment        Equipment[]
}

model ApproveEquipment {
  id          Int               @id @default(autoincrement())
  requestId   Int
  request     RequestEquipment? @relation(fields: [requestId], references: [id])
  approveById Int
  approveBy   User?             @relation(fields: [approveById], references: [id])
  step        Int
  allStatus   String
}

model Equipment {
  id        Int               @id @default(autoincrement())
  assetId   Int
  asset     Asset?            @relation(fields: [assetId], references: [id])
  detail    String
  qty       Int
  requestId Int
  request   RequestEquipment? @relation(fields: [requestId], references: [id])
}

model Asset {
  id          Int         @id @default(autoincrement())
  name       String
  assetTypeId Int
  assetType   AssetType?  @relation(fields: [assetTypeId], references: [id])
  Equipment   Equipment[]
}

model AssetType {
  id    Int     @id @default(autoincrement())
  name  String
  Asset Asset[]
}
